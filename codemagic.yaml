integrations:
  app_store_connect:
    integration_name: NK_Tomislav

workflows:
  ios-build:
    name: iOS Build for TestFlight
    environment:
      vars:
        BUNDLE_ID: "com.yourname.tomislav" # ✅ Use your actual bundle ID
        FLUTTER_BUILD_MODE: release
        FLUTTER_IOS_DEPLOYMENT_TARGET: "13.0"
      groups:
        - app_store_credentials
        - firebase_credentials
      flutter: stable
      xcode: latest

    code_signing:
      certificate_url: Encrypted(...) # ✅ Add your certificate URL from Codemagic
      certificate_password: Encrypted(...) # ✅ Add your certificate password
      provisioning_profile_url: Encrypted(...) # ✅ Add your provisioning profile URL

    scripts:
      - name: Set up iOS project
        script: |
          # Generate iOS files if missing
          if [ ! -d "ios" ]; then
            flutter create --platforms ios .
          fi

      - name: Set up Firebase
        script: |
          mkdir -p ios/Runner
          echo $GOOGLE_SERVICE_INFO | base64 --decode > ios/Runner/GoogleService-Info.plist
          plutil -replace MinimumOSVersion -string "13.0" ios/Runner/Info.plist
          sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = .*;/IPHONEOS_DEPLOYMENT_TARGET = 13.0;/g' ios/Runner.xcodeproj/project.pbxproj

      - name: Prepare Flutter dependencies
        script: |
          flutter clean
          flutter pub get
          flutter precache --ios

      - name: Install pods
        script: |
          cd ios
          pod repo update
          pod install --repo-update

      - name: Build IPA
        script: |
          flutter build ipa --release

    artifacts:
      - build/ios/ipa/*.ipa

    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
